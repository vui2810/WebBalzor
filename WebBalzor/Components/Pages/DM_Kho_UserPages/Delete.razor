@page "/dm_kho_users/delete"
@using Microsoft.EntityFrameworkCore
@using WebBalzor.Models
@inject IDbContextFactory<WebBalzor.Data.MyAppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>DM_Kho_User</h2>
    <hr />
    @if (dm_kho_user is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Kho_ID</dt>
            <dd class="col-sm-10">@dm_kho_user.Kho_ID</dd>
        </dl>
        <EditForm method="post" Model="dm_kho_user" OnValidSubmit="DeleteDM_Kho_User" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(dm_kho_user is null)">Delete</button> |
            <a href="/dm_kho_users">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private DM_Kho_User? dm_kho_user;

    [SupplyParameterFromQuery]
    private string Ma_Dang_Nhap { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        dm_kho_user = await context.DM_Kho_User.FirstOrDefaultAsync(m => m.Ma_Dang_Nhap == Ma_Dang_Nhap);

        if (dm_kho_user is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteDM_Kho_User()
    {
        using var context = DbFactory.CreateDbContext();
        context.DM_Kho_User.Remove(dm_kho_user!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/dm_kho_users");
    }
}
