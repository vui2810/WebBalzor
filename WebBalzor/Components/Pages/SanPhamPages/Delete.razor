@page "/sanphams/delete"

@inject IDbContextFactory<WebBalzor.Data.MyAppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>SanPham</h2>
    <hr />
    @if (sanpham is null)
    {
            <p><em>Loading...</em></p>
    }
    else
    {
            <dl class="row">
                <dt class="col-sm-2">Ten_San_Pham</dt>
                <dd class="col-sm-10">@sanpham.Ten_San_Pham</dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-2">Loai_San_Pham_Id</dt>
                <dd class="col-sm-10">@sanpham.Loai_San_Pham_Id</dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-2">Don_Vi_Tinh_ID</dt>
                <dd class="col-sm-10">@sanpham.Don_Vi_Tinh_ID</dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-2">Ghi_Chu</dt>
                <dd class="col-sm-10">@sanpham.Ghi_Chu</dd>
            </dl>
            <EditForm method="post" Model="sanpham" OnValidSubmit="DeleteSanPham" FormName="delete" Enhance>
                    <button type="submit" class="btn btn-danger" disabled="@(sanpham is null)">Delete</button> |
                    <a href="/sanphams"class="btn btn-outline-secondary">Back to List</a>
            </EditForm>
    }
</div>

@code {
    private SanPham? sanpham;

    [SupplyParameterFromQuery]
    private string Ma_San_Pham { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        sanpham = await context.SanPham.FirstOrDefaultAsync(m => m.Ma_San_Pham == Ma_San_Pham);

        if (sanpham is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteSanPham()
    {
        using var context = DbFactory.CreateDbContext();
        context.SanPham.Remove(sanpham!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/sanphams");
    }
}
